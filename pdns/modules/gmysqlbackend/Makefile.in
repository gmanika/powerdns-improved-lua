PDNS_HOME		= ../../pdns
PDNS_LIBDIR		= @libdir@

MYSQL_INCLUDES	     = @MYSQL_incdir@
MYSQL_LIB            = @MYSQL_lib@
MYSQL_LIBS           = -lmysqlclient 

PGSQL_INCLUDES	= @PGSQL_incdir@
PGSQL_LIB            = @PGSQL_lib@
PGSQL_LIBS           = -Wl,-Bstatic -lpq++ -lpq -Wl,-Bdynamic -lssl -lcrypt -lcrypto

CXXFLAGS=@CXXFLAGS@

INCLUDES=-I$(PDNS_HOME) -I../..

dopgsql=@dopgsql@
domysql=@domysql@

ifneq ($(dopgsql),no)
	TARGETS:=spgsql.o
	CXXFLAGS:=-DPDNS_DOPGSQL -I$(PGSQL_INCLUDES) $(CXXFLAGS)
	ELIBS:=$(PGSQL_LIB) $(PGSQL_LIBS)
endif

ifneq ($(domysql),no)
	TARGETS:=$(TARGETS) smysql.o
	CXXFLAGS:=-DPDNS_DOMYSQL -I$(MYSQL_INCLUDES) $(CXXFLAGS)
	ELIBS:=$(MYSQL_LIB) $(MYSQL_LIBS) $(ELIBS)
endif

all: libpgmysqlbackend.so gmysqlbackend.o $(TARGETS)

distclean: 
	rm -f *.o *.so *~ *.d deps Makefile

clean: 
	rm -f *.o *.so *~ *.d deps



PACKAGE = @PACKAGE@
VERSION = @VERSION@
DISTFILES=*.cc *.hh Makefile.in OBJECTFILES OBJECTLIBS

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done



	
deps:
	-g++ -MM -g -c $(CXXFLAGS) $(CPPFLAGS) $(INCLUDES) gmysqlbackend.cc smysql.cc  > deps

-include deps

.cc.o:
	g++ -MD -g -c $(CXXFLAGS) $(CPPFLAGS) $(INCLUDES) $<

libpgmysqlbackend.so: $(TARGETS) gmysqlbackend.o
	g++ -shared $^ $(ELIBS) -o $@

mkinstalldirs = $(SHELL) @top_srcdir@/mkinstalldirs
prefix=@prefix@
install:
	$(mkinstalldirs) $(DESTDIR)@libdir@
	install -s libpgmysqlbackend.so $(DESTDIR)@libdir@

